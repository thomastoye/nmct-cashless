@model nmct.ba.cashlessproject.api.Models.Organisation_RegisterBindModel

@{
    ViewBag.Title = "AssignTo";
}

<h2>Kassa toewijzen</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
                <label class="control-label col-md-2" for="OrganisationID">Toewijzen aan</label>
            <div class="col-md-10">
                <select name="OrganisationID" class="form-control">
                    @foreach(nmct.ba.cashlessproject.api.Models.Organisation org in ViewBag.Orgs) {
                        <option value="@org.ID">@org.OrganisationName</option>
                    }
                </select>
            </div>
        </div>

        @Html.HiddenFor(model => model.RegisterID)


        <div class="form-group">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UntilDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UntilDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UntilDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
